name: Copilot SWE Agent (Container + Cache + Clean Artifacts)

on:
  workflow_dispatch:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

jobs:
  copilot:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    # Use your prebuilt container image with Java, Gradle, Android SDK, Node.js
    container:
      image: ghcr.io/your-org/ci-image:latest
      options: --user 1001

    steps:
      - uses: actions/checkout@v4

      # Cache Gradle wrapper and dependencies
      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            ~/.gradle/build-cache
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Cache Android build cache
      - name: Cache Android build-cache
        uses: actions/cache@v4
        with:
          path: ~/.android/build-cache
          key: ${{ runner.os }}-android-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-android-

      # Cache Node.js dependencies
      - name: Cache Node.js
        uses: actions/cache@v4
        with:
          path: |
            ~/.npm
            ~/.cache/yarn
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      # Cache project build outputs (incremental compilation)
      - name: Cache Project Build Outputs
        uses: actions/cache@v4
        with:
          path: "**/build"
          key: ${{ runner.os }}-build-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-build-

      # Run Gradle build (container already has JDK, Node, Android SDK installed)
      - name: Build with Gradle
        run: ./gradlew build --no-daemon --stacktrace

      # Ensure artifact placeholders exist to avoid warnings
      - name: Ensure log placeholders exist
        run: |
          mkdir -p /home/runner/work/_temp/runtime-logs
          touch /home/runner/work/_temp/runtime-logs/blocked.jsonl
          touch /home/runner/work/_temp/runtime-logs/blocked.md

      # Upload logs (will always succeed, no warnings)
      - name: Upload Copilot logs
        uses: actions/upload-artifact@v4
        with:
          name: results
          path: |
            /home/runner/work/_temp/runtime-logs/blocked.jsonl
            /home/runner/work/_temp/runtime-logs/blocked.md
          if-no-files-found: ignore
